{0: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. While several fields have defined the term for their own purposes, there is only a vague understanding of its meaning that is shared by all fields. To obtain this contour image, the Canny edge detection algorithm is adopted. ', 1: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. ', 2: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 3: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 4: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. ', 5: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. While several fields have defined the term for their own purposes, there is only a vague understanding of its meaning that is shared by all fields. ', 6: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. ', 7: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. ', 8: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. ', 9: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 10: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. While several fields have defined the term for their own purposes, there is only a vague understanding of its meaning that is shared by all fields. ', 11: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 12: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 13: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. ', 14: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. ', 15: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 16: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. ', 17: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 18: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 19: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 20: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 21: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 22: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 23: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 24: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 25: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 26: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. ', 27: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 28: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. ', 29: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 30: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 31: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. ', 32: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 33: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 34: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 35: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. While several fields have defined the term for their own purposes, there is only a vague understanding of its meaning that is shared by all fields. ', 36: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. ', 37: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. ', 38: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 39: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 40: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 41: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 42: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. ', 43: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. ', 44: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. ', 45: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. An abstraction is a process that transforms a source thing into a less concrete sign thing of the source thing. While several fields have defined the term for their own purposes, there is only a vague understanding of its meaning that is shared by all fields. ', 46: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. In the following, we approach this generic idea under a specific interactive framework. All these notions have a lot in common, yet there is a major discrepancy in the terminology and basic understanding about visual abstraction in the context of visualization. ', 47: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 48: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. ', 49: 'Typically, classes and methods are hierarchically grouped into increasingly abstract constructs such that implementations of particular functionality can be shared among many different elements. Abstraction uses a concept of point-of-view, which determines which aspects of source thing should be preserved in its sign thing and which should be suppressed. '}